version: '3.8'

services:
  # Target Service - NGINX
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - monitoring
    restart: unless-stopped

  # nginx-exporter
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    ports:
      - "9113:9113"
    command: >
      --nginx.scrape-uri=http://nginx:80/nginx_status
    depends_on:
      - nginx
    networks:
      - monitoring
    restart: unless-stopped


  # Prometheus - Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert-rules.yml:/etc/prometheus/alert-rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring
    restart: unless-stopped

  # Alertmanager - Alert Management
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    networks:
      - monitoring
    restart: unless-stopped

  # Node Exporter - System Metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    restart: unless-stopped

    # blackbox-exporter:
    # image: prom/blackbox-exporter:latest
    # container_name: blackbox-exporter
    # ports:
    #   - "9115:9115"
    # volumes:
    #   - ./blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml
    # networks:
    #   - monitoring
    # restart: unless-stopped

  # Webhook Handler - Ansible Trigger
  webhook-handler:
    build:
      context: ./webhook
      dockerfile: Dockerfile
    container_name: webhook-handler
    ports:
      - "8080:8080"
    volumes:
      - ./ansible:/app/ansible
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logs:/app/logs
    environment:
      - ANSIBLE_HOST_KEY_CHECKING=False
    networks:
      - monitoring
    restart: unless-stopped

  # Grafana - Visualization (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring
    restart: unless-stopped

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  alertmanager_data:
  grafana_data: